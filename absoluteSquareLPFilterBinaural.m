function [sigma, delta, AlgorithmParameters] = ...
    absoluteSquareLPFilterBinaural(sigma, delta, AlgorithmParameters)

        sigma.L = abs(sigma.L).^2;
        sigma.R = abs(sigma.R).^2;
        delta.L = abs(delta.L).^2;
        delta.R = abs(delta.R).^2;
    
        [sigma.L, AlgorithmParameters.L.FilterStates.sigmaNormLP] ...
            = firstOrderLowPass(sigma.L, ...
            AlgorithmParameters.L.FilterStates.sigmaNormLP, AlgorithmParameters);
        [sigma.R, AlgorithmParameters.R.FilterStates.sigmaNormLP] ...
            = firstOrderLowPass(sigma.R, ...
            AlgorithmParameters.R.FilterStates.sigmaNormLP, AlgorithmParameters);
        [delta.L, AlgorithmParameters.L.FilterStates.deltaNormLP] ...
            = firstOrderLowPass(delta.L, ...
            AlgorithmParameters.L.FilterStates.deltaNormLP, AlgorithmParameters);
        [delta.R, AlgorithmParameters.R.FilterStates.deltaNormLP] ...
            = firstOrderLowPass(delta.R, ...
            AlgorithmParameters.R.FilterStates.deltaNormLP, AlgorithmParameters);
end